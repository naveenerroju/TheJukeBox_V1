plugins {
	id 'java'
	id 'application'
}

ext {
	buildId = System.currentTimeMillis()
	jukeBoxMainClass = "com.naveen.jukebox.App"
}

// Replace the mainClass variable with jukeBoxMainClass to only run the JukeBox Application.
// Revert back to codinGameMainClass to only run the CodingGame Application.
application {
    mainClass = jukeBoxMainClass
}

group = 'com.naveen'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.mockito:mockito-junit-jupiter:3.11.1'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-csv
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.17.0'
	
	implementation 'com.opencsv:opencsv:5.6'
}

test {
	reports {
		junitXml.enabled = true
		def destinationDirectory = System.getProperty("user.home") + "/.gradle/daemon/${buildId}/test-results"
		junitXml.destination = file(destinationDirectory)
		html.enabled = true
	}
	useJUnitPlatform {
	}
	testLogging.events ("STANDARD_ERROR")
	testLogging.events ("STANDARD_OUT")
	afterSuite { desc, result ->
		if (!desc.parent) {
			println "\nTEST RESULT: ${result.resultType}"
			println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
					"${result.successfulTestCount} SUCCEEDED, " +
					"${result.failedTestCount} FAILED, " +
					"${result.skippedTestCount} SKIPPED"
		}
	}
}

